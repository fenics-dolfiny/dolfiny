[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dolfiny"
version = "0.10.0dev0"
description = "High-level and convenience wrappers for DOLFINx, the FEniCS library."
authors = [
      {name = "Andreas Zilian", email = "andreas.zilian@uni.lu"},
      {name = "Michal Habera", email = "michal.habera@gmail.com"},
      {name = "Paul T. Kühner", email = "paul.kuehner@uni.lu"},
]
readme = "README.md"
requires-python = ">=3.10.0"
dependencies = ["fenics-dolfinx>=0.10.0.dev0,<0.11.0"]

[project.optional-dependencies]
dev = ["mypy<1.10", "ruff"]
vis = ["matplotlib", "pyvista>=0.43.0"]
jit = ["numba", "cppyy>=3.1.0"]
test = ["dolfiny[jit,vis]", "pytest-xdist", "coverage", "scipy"]
demo = ["dolfiny[jit,vis]"]
typing = ["mypy"]
all = ["dolfiny[test,demo,dev,typing]"]

[project.urls]
repository = "https://github.com/fenics-dolfiny/dolfiny"

[tool.setuptools.package-data]
dolfiny = ["localsolver.h"]

[tool.mypy]
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = false
check_untyped_defs = false
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
      "E", # pycodestyle
      "W", # pycodestyle
      "F", # pyflakes
      "I",   # isort - use standalone isort
      "RUF", # Ruff-specific rules
      "UP",  # pyupgrade
      "ICN", # flake8-import-conventions
      "NPY", # numpy-specific rules
      "FLY", # use f-string not static joins
]
allowed-confusables = ["σ", "×"]

[tool.ruff.lint.isort]
known-first-party = ["dolfiny"]
known-third-party = ["cppyy", "gmsh", "numba", "numpy", "pytest", "pyvista"]
section-order = [
      "future",
      "standard-library",
      "mpi",
      "fenics",
      "third-party",
      "first-party",
      "local-folder",
]

[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]
"fenics" = ["basix", "dolfinx", "ffcx", "ufl"]

[tool.pytest.ini_options]
addopts = "--color=yes --junitxml=report.xml"

[tool.coverage.run]
parallel = true
branch = true
source = ["dolfiny"]